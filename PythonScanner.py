import subprocess
import json

def get_installed_packages():
    """Retrieve a list of installed Python packages using pip."""
    result = subprocess.run(['pip', 'list', '--format=json'], capture_output=True, text=True)
    if result.returncode != 0:
        print("Error:", result.stderr)
        return None  # Return None to indicate an error
    else:
        try:
            packages = json.loads(result.stdout)
            return {pkg['name']: pkg['version'] for pkg in packages}
        except json.JSONDecodeError as e:
            print("Error decoding JSON:", e)
            print("Output:", result.stdout)
            return None  # Return None to indicate an error

def check_vulnerabilities(installed_packages):
    """Check installed packages against a list of known vulnerabilities."""
    known_vulnerabilities = {
        'flask': ['0.12', '1.0'],
        'requests': ['2.19.1'],
        'numpy': ['1.16.0', '1.16.1', '1.16.2'],
        'django': ['1.11.29', '2.2.22', '3.0.14'],  # Example Django vulnerabilities
        'pillow': ['5.4.1', '6.2.2'],  # Example Pillow vulnerabilities
        'paramiko': ['2.4.2', '2.6.0'],  # Example Paramiko vulnerabilities
        'urllib3': ['1.24.3'],  # Example urllib3 vulnerability (CVE-2019-11324)
        # Add more entries for other vulnerable packages as needed
    }
    
    vulnerabilities_found = {}
    for package, version in installed_packages.items():
        if package.lower() in known_vulnerabilities:
            if version in known_vulnerabilities[package.lower()]:
                vulnerabilities_found[package] = version
    return vulnerabilities_found

def main():
    """Main function to run the vulnerability scanner."""
    installed_packages = get_installed_packages()
    if installed_packages is not None:
        vulnerabilities = check_vulnerabilities(installed_packages)
        if vulnerabilities:
            print("Vulnerabilities found:")
            for pkg, ver in vulnerabilities.items():
                print(f"{pkg} version {ver} is vulnerable")
        else:
            print("No vulnerabilities found.")
    else:
        print("Failed to retrieve installed packages.")

if __name__ == "__main__":
    main()